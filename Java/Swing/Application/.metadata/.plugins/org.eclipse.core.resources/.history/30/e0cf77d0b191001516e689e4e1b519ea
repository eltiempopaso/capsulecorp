package Dynatac.Bus;

import java.net.ServerSocket;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;

import Dynatac.Bus.IDynatacBus.IDynatacBusSuscriptor;


public class DynatacBusBridge implements IDynatacBus, IDynatacBusSuscriptor, Runnable {
	private List<IDynatacBusSuscriptor > suscriptors_ = new ArrayList<IDynatacBusSuscriptor>();
		
	private BufferedReader inputBuffer_ = null;
	private PrintStream    outputBuffer_ = null;
	
	IDynatacBus busLeft_, busRight_;
	
	
	/// Constructor
	public DynatacBusBridge (IDynatacBus aBusLeft, IDynatacBus aBusRight) {
		
		busLeft_  = aBusLeft;
		busRight_ = aBusRight;
		
		busLeft_.setOnDataAvailable(this);
		busRight_.setOnDataAvailable(this);
		
		new Thread (this).start();
	}
	
	/* IDynatacBus methods*/
	public void write(String data) {
		System.out.println("Sent: " + data);
		outputBuffer_.println(data);
	}

	public void setOnDataAvailable(IDynatacBusSuscriptor s) {
		if (!suscriptors_.contains(s))
		{
			suscriptors_.add(s);
		}
	}

	protected void notifySuscriptors (String data)
	{
		for (int z = 0; z<suscriptors_.size(); z++)
		{
			IDynatacBusSuscriptor s = suscriptors_.get(z);
			
			s.dataAvailable(data);
		}
	}
	
	public void dataAvailable(String data) {
		// TODO Auto-generated method stub
		
	}

	/* Runnable methods */
	public void run() {
		
		while (true)
		{
	
		}
	}
}
	
