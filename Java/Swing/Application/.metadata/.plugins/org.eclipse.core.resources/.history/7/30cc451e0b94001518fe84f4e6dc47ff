package Dynatac.Bus;

import java.net.ServerSocket;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;


public class DynatacBusServerSocket extends DynatacBusBase implements Runnable {
	private int myPort_;
	
	private boolean serverIsStarted_;
	private ServerSocket listener_;
	private Socket socket_;
	
	private BufferedReader inputBuffer_ = null;
	private PrintStream    outputBuffer_ = null;
	
	
	/// Constructor
	public DynatacBusServerSocket (int aPort) {
		myPort_ = aPort;
		
		new Thread (this).start();
	}

	private void startServer () throws IOException
	{
		listener_ = new ServerSocket(myPort_);
		socket_   = listener_.accept();		
		
		streamInitializations (socket_.getInputStream(), socket_.getOutputStream());
		
		serverIsStarted_ = true;
	}
	
	private void stopServer () throws IOException
	{
		serverIsStarted_ = false;
		socket_.close();
		listener_.close();
	}
	


	/* Runnable methods */
	public void run() {
		try {
			startServer ();
		} catch (IOException e1) {
			e1.printStackTrace();
		}
	
		while (serverIsStarted_)
		{
			dataAvailable();
		}
		
		try {
			stopServer();
		} catch (IOException e) {
			e.printStackTrace();
		} 
	}

	@Override
	protected void initialize() {
		try {
			startServer ();
		} catch (IOException e1) {
			e1.printStackTrace();
		}	
	}

	@Override
	protected void close() {
		// TODO Auto-generated method stub
		
	}
}
