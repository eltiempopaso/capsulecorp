import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import Dynatac.Bus.DynatacBusBridge;
import Dynatac.Bus.DynatacBusClientSocket;
import Dynatac.Bus.DynatacBusSerial;
import Dynatac.Bus.DynatacBusSerial.DynatacBusSerial_ConfigInfo;
import Dynatac.Bus.DynatacBusServerSocket;
import Dynatac.Protocol.DynatacProtocol;
import Dynatac.Protocol.IDynatacProtocolMaster;
import Dynatac.Protocol.IDynatacProtocolMaster.IDynatacProtocolMasterSuscriptor;

import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.List;
import java.awt.event.ActionEvent;

@SuppressWarnings("unused")
public class DomoDuino extends JFrame implements IDynatacProtocolMasterSuscriptor{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DomoDuino frame = new DomoDuino();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	JButton btnToogleLed;
	JLabel labelTemperatura;
	JLabel labelHumedad;
	JLabel labelLuz;
	int currentLedStatus;
	public DomoDuino() throws IOException {
		currentLedStatus = 0;

		List<String> detectedSerialPorts = DynatacBusSerial.getDetectedPorts();
		String aSerialPortName = "";
		System.out.println("Existing serial ports: "+ detectedSerialPorts.size());
		
		for (int i = 0; i < detectedSerialPorts.size() && aSerialPortName == ""; i++)
		{
			String name = detectedSerialPorts.get(i);
			System.out.println("Serial port "+ i + " named: " + name);
			if (
					name.equals("/dev/tty.usbserial-A9007UX1") // Mac OS X
			 ||     name.equals("/dev/ttyACM0") // Raspberry Pi
			 ||     name.equals("/dev/ttyUSB0") // Linux
			 ||     name.equals("COM3") // Windows 
			 )
			{
				aSerialPortName = detectedSerialPorts.get(i);
				System.out.println("Found port: "+ aSerialPortName);
			}
		}
		
		if (aSerialPortName == "")
		{
			System.err.println ("ERROR. No serial devices found.");
		}
		else
		{
			System.out.println("Using port: "+ aSerialPortName);
			
		}
		
		final IDynatacProtocolMaster dynatac_ = new DynatacProtocol(new DynatacBusSerial(aSerialPortName, new DynatacBusSerial_ConfigInfo());
			
		//final IDynatacProtocolMaster dynatac_ = new DynatacProtocol(new DynatacBusServerSocket(9090));
		
		//final IDynatacProtocolMaster dynatac_ = new DynatacProtocol(new DynatacBusClientSocket("192.168.1.7",9090));
		
		//final IDynatacProtocolMaster dynatac_= new DynatacProtocol(new DynatacBusBridge(new DynatacBusServerSocket(9090),new DynatacBusServerSocket(9091)));
		
		//final IDynatacProtocolMaster dynatac_= new DynatacProtocol(new DynatacBusBridge(new DynatacBusServerSocket(9090),new DynatacBusClientSocket("192.168.1.105",9091)));
		
		
		dynatac_.setOnEvent(this);
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
		
		JPanel panel = new JPanel();
		contentPane.add(panel, BorderLayout.CENTER);
		
		labelTemperatura = new JLabel("1");
		labelHumedad 	 = new JLabel("7");
		labelLuz 		 = new JLabel("9");
		
		btnToogleLed = new JButton("Toogle LED");
		btnToogleLed.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				currentLedStatus = currentLedStatus==0?1:0;
				dynatac_.sendCommand(0, currentLedStatus);
			}
		});
		panel.add(btnToogleLed);
		panel.add(labelTemperatura);
		panel.add(labelHumedad);
		panel.add(labelLuz);
		
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		System.out.println("Program is started");
	}
	
final int EVENTO_TEMPERATURA 	= 0;
final int EVENTO_LUZ 			= 1;
final int EVENTO_HUMEDAD 		= 2;

	public void remoteEvent(int eventId, int data) {
		if (eventId == EVENTO_TEMPERATURA)
		{
			labelTemperatura.setText("Temp: "+ String.valueOf(data));			
		}
		else if (eventId == EVENTO_LUZ)
		{
			labelLuz.setText("Luz: " + String.valueOf(data));
		}
		else if (eventId == EVENTO_HUMEDAD)
		{
			labelHumedad.setText("Humedad: " + String.valueOf(data));
		}
	}
}
