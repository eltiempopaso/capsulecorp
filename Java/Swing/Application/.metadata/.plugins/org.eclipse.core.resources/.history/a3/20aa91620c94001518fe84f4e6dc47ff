package Dynatac.Bus;

import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

import java.io.BufferedReader;

import java.io.InputStreamReader;
import java.io.PrintStream;



public class DynatacBusClientSocket  extends DynatacBusBase implements Runnable {	
	String remoteAddr_ = "";
	int remotePort_ = 0;
	
	private Socket socket_ = null;
	private BufferedReader input_  = null;
	private PrintStream    output_ = null;
	
	public DynatacBusClientSocket (String addr, int port) {
		remoteAddr_ = addr;
		remotePort_ = port;
		
		new Thread (this).start();
	}

	private void connect (String addr, int port) throws IOException
	{
		socket_ = new Socket (addr, port);
		
		streamInitializations (socket_.getInputStream(),socket_.getOutputStream());
	}
	
	@SuppressWarnings("unused")
	private void disconnect () throws IOException
	{
		input_  = null;
		output_ = null;
		if (socket_ != null)
		{
			socket_.close();
			socket_ = null;
		}
	}

	public void run() {
		
		try {
			connect (remoteAddr_, remotePort_);
		} catch (IOException e1) {
			e1.printStackTrace();
		}
		
		while (true)
		{
				// if available data, notify suscriptors
				try {
					String line = null;
					line = input_.readLine();
					notifySuscriptors (line);
				} catch (IOException e) {
					
					e.printStackTrace();
				}	
		}
		
		//disconnect();
		
	}



	protected void close() {
		// TODO Auto-generated method stub
		
	}

}
